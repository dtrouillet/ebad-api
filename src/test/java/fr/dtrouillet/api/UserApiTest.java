/*
 * EBAD API
 * This documentation describe EBAD API.
 *
 * OpenAPI spec version: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fr.dtrouillet.api;

import io.swagger.client.model.AuthorityApplicationDTO;
import io.swagger.client.model.PageUserDto;
import io.swagger.client.model.Pageable;
import io.swagger.client.model.Predicate;
import io.swagger.client.model.RolesDTO;
import io.swagger.client.model.UserAccountDto;
import io.swagger.client.model.UserDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void activateAccountTest() {
        String key = null;
        api.activateAccount(key);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeApplicationAuthorityTest() {
        AuthorityApplicationDTO body = null;
        UserDto response = api.changeApplicationAuthority(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeRolesTest() {
        RolesDTO body = null;
        UserDto response = api.changeRoles(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void currentUserTest() {
        UserDto response = api.currentUser();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllTest() {
        Pageable pageable = null;
        Predicate predicate = null;
        PageUserDto response = api.getAll(pageable, predicate);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserTest() {
        String login = null;
        UserDto response = api.getUser(login);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void inactivateAccountTest() {
        String login = null;
        UserDto response = api.inactivateAccount(login);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveUserTest() {
        UserAccountDto body = null;
        UserDto response = api.saveUser(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() {
        UserDto body = null;
        UserDto response = api.updateUser(body);

        // TODO: test validations
    }
}
