/*
 * EBAD API
 * This documentation describe EBAD API.
 *
 * OpenAPI spec version: 2.7.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fr.dtrouillet.api;

import io.swagger.client.model.ApplicationDto;
import io.swagger.client.model.PageApplicationDto;
import io.swagger.client.model.PageApplicationSimpleDto;
import io.swagger.client.model.PageUsageApplicationDto;
import io.swagger.client.model.Pageable;
import io.swagger.client.model.Predicate;
import io.swagger.client.model.UserSimpleDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationApi
 */
@Ignore
public class ApplicationApiTest {

    private final ApplicationApi api = new ApplicationApi();

    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createApplicationTest() {
        ApplicationDto body = null;
        ApplicationDto response = api.createApplication(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findApplicationTest() {
        Pageable pageable = null;
        Predicate predicate = null;
        PageApplicationSimpleDto response = api.findApplication(pageable, predicate);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAll3Test() {
        Pageable pageable = null;
        PageApplicationDto response = api.getAll3(pageable);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllManageTest() {
        Pageable pageable = null;
        Predicate predicate = null;
        PageApplicationDto response = api.getAllManage(pageable, predicate);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllUsagesTest() {
        Long id = null;
        Pageable pageable = null;
        PageUsageApplicationDto response = api.getAllUsages(id, pageable);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllWriteTest() {
        Pageable pageable = null;
        PageApplicationDto response = api.getAllWrite(pageable);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getModeratorsFromApplicationTest() {
        Long id = null;
        List<UserSimpleDto> response = api.getModeratorsFromApplication(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsersFromApplicationTest() {
        Long id = null;
        List<UserSimpleDto> response = api.getUsersFromApplication(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void importAll1Test() {
        api.importAll1();

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeApplicationTest() {
        Long appId = null;
        api.removeApplication(appId);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateApplicationTest() {
        ApplicationDto body = null;
        ApplicationDto response = api.updateApplication(body);

        // TODO: test validations
    }
}
